{
  "hash": "971c45f73e90e8a2d71aa356b2ac4c2d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-Class Exercise 12\"\nauthor: \"Dexter Wan\"\ndate: \"November 11, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## Description\n\nLearning about Geographically Predictive Modelling in R.\n\n### Changelog\n\n11 Nov 24: Completed In-Class Exercise 12.\n\n## Importing Data and Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, yardstick, tidyverse, knitr, kableExtra, spatialRF)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata = read_rds(\"data/rds/mdata.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nHDB_sample = mdata %>% sample_n(1500)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noverlapping_points = HDB_sample %>%\n  mutate(overlap = lengths(st_equals(., .)) > 1)\nsummary(overlapping_points$overlap)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Mode   FALSE    TRUE \nlogical    1047     453 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHDB_sample = HDB_sample %>% st_jitter(amount = 5)\n```\n:::\n\n\n## Data Sampling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split = initial_split(HDB_sample, prop = 6.67/10)\ntrain_data = training(resale_split)\ntest_data = testing(resale_split)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")\n```\n:::\n\n\n## Predictive Modelling with GWR\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_train_ad = bw.gwr(resale_price ~ floor_area_sqm + storey_order + \n                           remaining_lease_mths +\n              PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + \n              PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n              WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + \n              WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n              data = train_data,\n              approach = \"CV\",\n              kernel = \"gaussian\",\n              adaptive = TRUE,\n              longlat = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 625 CV score: 3.459032e+12 \nAdaptive bandwidth: 394 CV score: 3.231786e+12 \nAdaptive bandwidth: 250 CV score: 2.914736e+12 \nAdaptive bandwidth: 162 CV score: 2.610897e+12 \nAdaptive bandwidth: 107 CV score: 2.240188e+12 \nAdaptive bandwidth: 73 CV score: 1.971641e+12 \nAdaptive bandwidth: 52 CV score: 1.797271e+12 \nAdaptive bandwidth: 39 CV score: 1.659472e+12 \nAdaptive bandwidth: 31 CV score: 1.573963e+12 \nAdaptive bandwidth: 26 CV score: 1.550147e+12 \nAdaptive bandwidth: 23 CV score: 1.542544e+12 \nAdaptive bandwidth: 21 CV score: 1.518885e+12 \nAdaptive bandwidth: 19 CV score: 1.515965e+12 \nAdaptive bandwidth: 19 CV score: 1.515965e+12 \n```\n\n\n:::\n\n```{.r .cell-code}\ngwr_bw_train_ad\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 19\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_ad = gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n                     remaining_lease_mths +\n                     PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + \n              PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n              WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + \n              WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n              data = train_data,\n              bw = 20,\n              kernel = \"gaussian\",\n              adaptive = TRUE,\n              longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred = gwr.predict(formula = resale_price ~ floor_area_sqm + storey_order + \n                     remaining_lease_mths +\n                     PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + \n              PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n              WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + \n              WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n              data = train_data,\n              predictdata = test_data,\n              bw = 20,\n              kernel = \"gaussian\",\n              adaptive = TRUE,\n              longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred_df = as.data.frame(gwr_pred$SDF$prediction) %>%\n  rename(gwr_pred = \"gwr_pred$SDF$prediction\")\n```\n:::\n\n\n## Predictive Modelling with RF method\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords = st_coordinates(HDB_sample)\ncoords_train = st_coordinates(train_data)\ncoords_test = st_coordinates(test_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_nogeom = train_data %>% st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf = ranger(resale_price ~ floor_area_sqm + storey_order + \n                     remaining_lease_mths +\n                     PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + \n              PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n              WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + \n              WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n              data = train_data_nogeom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_nogeom = cbind(test_data, coords_test) %>% st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred = predict(rf, data = test_data_nogeom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred_df = as.data.frame(rf_pred$predictions) %>%\n  rename(rf_pred = \"rf_pred$predictions\")\n```\n:::\n\n\n## Predictive Modelling with SpatialML\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngrf_ad = grf(formula = resale_price ~ floor_area_sqm + storey_order + \n                     remaining_lease_mths +\n                     PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + \n              PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n              WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + \n              WITHIN_350M_BUS + WITHIN_1KM_PRISCH,\n              dframe = train_data_nogeom,\n              bw = 20,\n             kernel = \"adaptive\",\n             coords = coords_train)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nNumber of Observations: 1000\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNumber of Independent Variables: 14\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nKernel: Adaptive\nNeightbours: 20\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Global ML Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      1000 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       2056587170 \nR squared (OOB):                  0.8568804 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nImportance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          floor_area_sqm             storey_order     remaining_lease_mths \n            6.932661e+11             1.471090e+12             2.512971e+12 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            4.695331e+12             5.430899e+11             6.061641e+11 \n                PROX_MRT                PROX_PARK                PROX_MALL \n            8.355142e+11             5.612980e+11             4.449032e+11 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n            3.698543e+11             1.287529e+11             2.290324e+11 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n            2.310307e+11             7.644464e+11 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean Square Error (Not OOB): 398120142.153\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (Not OOB) %: 97.227\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (Not OOB): 19832.264\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (Not OOB): 19832.752\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Local Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals OOB:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-290000.0  -23542.0     301.7   -1419.2   20628.4  275662.5 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals Predicted (Not OOB):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-39811.32  -2890.27      0.25     41.71   2914.50  45363.69 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nLocal Variable Importance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                               Min          Max        Mean         StD\nfloor_area_sqm                   0  93554808148  6579446660 12070756152\nstorey_order              40825679 175066741478  6798143080 17439613620\nremaining_lease_mths     147176404 132323223994 17003264291 27856556164\nPROX_CBD                  98672979  86998930774  7795275977 12420258631\nPROX_ELDERLYCARE         136038143  60602086147  6363805690  9972185105\nPROX_HAWKER               89375590  76470252974  5959960036 10069973920\nPROX_MRT                 141134469 116981909991  7311127365 14402287905\nPROX_PARK                173527329  91563243055  6282954230 12004019497\nPROX_MALL                136045951 111744007681  8082912771 14856365039\nPROX_SUPERMARKET         117381309  67560243432  5118831575  8420630833\nWITHIN_350M_KINDERGARTEN         0  43638703821  1704409355  3939462279\nWITHIN_350M_CHILDCARE     24644933 114970847915  4291790153 10498357427\nWITHIN_350M_BUS           45643896  81035956654  3244648284  6333435620\nWITHIN_1KM_PRISCH                0  29773426249  1919719438  3594705849\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean squared error (OOB): 2776322474.986\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (OOB) %: 80.66\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (OOB): 21774.393\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (OOB): 21774.881\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMean squared error Predicted (Not OOB): 56975707.952\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared Predicted (Not OOB) %: 99.603\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC Predicted (Not OOB): 17888.136\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc Predicted (Not OOB): 17888.623\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nCalculation time (in seconds): 32.3679\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred = predict.grf(grf_ad, test_data_nogeom,\n                       x.var.name = \"X\",\n                       y.var.name = \"Y\",\n                       local.w = 1,\n                       global.w = 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred_df = as.data.frame(grf_pred)\n```\n:::\n\n\n## Model Comparison\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_pred = test_data %>%\n  select(resale_price) %>%\n  cbind(gwr_pred_df) %>%\n  cbind(rf_pred_df) %>%\n  cbind(grf_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_longer = test_data_pred %>%\n  st_drop_geometry() %>%\n  pivot_longer(cols = ends_with(\"pred\"),\n               names_to = \"model\",\n               values_to = \"predicted\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_labels = c(gwr_pred = \"gwr\",\n                 rf_pred = \"Random Forest\",\n                 grf_pred = \"gwRF\")\n\ntest_longer = test_longer %>% mutate(model = recode(model, !!!model_labels))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse_results = test_longer %>%\n  group_by(model) %>%\n  rmse(truth = resale_price,\n       estimate = predicted) %>%\n  rename(rmse = .estimate) %>%\n  select(model, rmse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rmse_results,\n       aes(x = reorder(model, rmse),\n           y = rmse,\n           fill = \"skyblue\")) + \n  geom_bar(stat = \"identity\",\n           fill = \"skyblue\",\n           color = \"black\",\n           width = 0.7) +\n  labs(title = \"RMSE Comparison of Models\",\n       y = \"RMSE\",\n       x = \"Model\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex12_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_longer = test_longer %>%\n  left_join(rmse_results, by = \"model\")\n\nggplot(data = test_longer,\n       aes(x = predicted,\n           y = resale_price))+\n  facet_wrap(~ model) +\n  geom_point() +\n  geom_text(data = test_longer,\n            aes(x = Inf, y = Inf,\n                label = paste(\"RMSE: \", round(rmse))),\n            hjust = 1.1, vjust = 1.1,\n            color = \"black\", size = 4)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex12_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvar_imp = data.frame(\n  Variable = names(grf_ad$Global.Model$variable.importance),\n  Importance = grf_ad$Global.Model$variable.importance\n)\n\nggplot(var_imp, \n       aes(x = reorder(Variable, Importance),\n           y = Importance)) +\n  geom_bar(stat = \"identity\",\n           fill = \"skyblue\") +\n  coord_flip() +\n  labs(title = \"Variable Importance from Ranger model\",\n       x = \"Variables\",\n       y = \"Importance\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex12_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-Class_Ex12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}