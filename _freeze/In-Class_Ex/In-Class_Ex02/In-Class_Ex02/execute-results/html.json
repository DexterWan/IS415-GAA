{
  "hash": "8aea8c5de0b9fa00f1e91842d6813dfe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-Class Exercise 2\"\nauthor: \"Dexter Wan\"\ndate: \"August 26, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## Description\n\nLearning to write sf in to KML files in R.\n\n### Changelog\n\n26 Aug 24: Completed In-Class Exercise 2.\n\n## Importing and writing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, ggplot2, tmap)\nmpsz = st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\0SMU\\IS415-GAA\\In-Class_Ex\\In-Class_Ex02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n\n```{.r .cell-code}\n#mpsz_kml <- st_read(\"data/MasterPlan2014SubzoneBoundaryWeb.kml\")\n```\n:::\n\n\nThe KML file is unreadable, and thus is not usable in this context. This could be this is a ***zip*** KML, which is not readable. Thankfully, we are still able to use the shapefile. The code to read the KML file has been commented out to allow the page to render.\n\nShapefiles are more robust and have better support compared to KML, and tends to be preferred. We can write sf into a KML file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz, \"data/MP14_SUBZONE_WEB_PL.kml\", delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n\nThe argument *delete_dsn* is to ensure that if a file with the same name exists, it will be delete it first. This ensures a overwrite should the data be modified.\n\nImport the **Master Plan 2019** and **Master Plan 2019 (No Sea)** data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz2019_shp = st_read(dsn = \"data\", layer = \"MPSZ-2019\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\0SMU\\IS415-GAA\\In-Class_Ex\\In-Class_Ex02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nmpsz2019_kml <- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\0SMU\\IS415-GAA\\In-Class_Ex\\In-Class_Ex02\\data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nAs the CRS for both files are WGS 84, we should transform it into SVY21:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz2019_shp = st_read(dsn = \"data\", layer = \"MPSZ-2019\") %>%\n  st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\0SMU\\IS415-GAA\\In-Class_Ex\\In-Class_Ex02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\npresch = st_read(\"data/PreSchoolsLocation.kml\") %>%\n  st_transform(crs=3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\0SMU\\IS415-GAA\\In-Class_Ex\\In-Class_Ex02\\data\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nImport **Singapore Residents June 2023** data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata = read_csv(\"data/respopagesextod2023.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nReorganise the population data to base data only on age, planning area and subzone. It also makes age into columns rather than different rows using *pivot_wider*:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 = popdata %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP`= sum(`Pop`)) %>%\n  ungroup() %>%\n  pivot_wider(names_from = AG, values_from = POP)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ncolnames(popdata2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n\n## Data Processing\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate(YOUNG = rowSums(.[3:6]) +rowSums(.[14])) %>%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15]))%>%\n  mutate(`AGED`=rowSums(.[16:21])) %>%\n  mutate(`TOTAL`=rowSums(.[3:21])) %>%  \n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\npopdata2023\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 332 × 7\n   PA         SZ                   YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n   <chr>      <chr>                <dbl>            <dbl> <dbl> <dbl>      <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Cen…  1240             2830   890  4960      0.753\n 2 Ang Mo Kio Cheng San             5150            15600  6580 27330      0.752\n 3 Ang Mo Kio Chong Boon            4620            14120  7060 25800      0.827\n 4 Ang Mo Kio Kebun Bahru           4320            12400  5640 22360      0.803\n 5 Ang Mo Kio Sembawang Hills       1840             3670  1420  6930      0.888\n 6 Ang Mo Kio Shangri-La            3810             9600  4320 17730      0.847\n 7 Ang Mo Kio Tagore                1870             4320  1790  7980      0.847\n 8 Ang Mo Kio Townsville            3750            11090  5390 20230      0.824\n 9 Ang Mo Kio Yio Chu Kang             0                0     0     0    NaN    \n10 Ang Mo Kio Yio Chu Kang East     1090             2410   880  4380      0.817\n# ℹ 322 more rows\n```\n\n\n:::\n:::\n\n\nJoin the **popdata2023** with the **Master Plan 2019** data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate_at(.vars = vars(PA,SZ), .funs = list(toupper))\n\nmpsz_pop2023 <- left_join(mpsz2019_shp, popdata2023, by = c(\"SUBZONE_N\"=\"SZ\"))\n# pop2023_mpsz <- left_join(popdata2023, mpsz2019_shp, by = c(\"SUBZONE_N\"=\"SZ\"))\n# The commented code will give an error as the sequence of the tables is wrong\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}